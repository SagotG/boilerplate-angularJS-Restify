{"ast":null,"code":"import _classCallCheck from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/usr/app/src/src/components/Validation/Validation.jsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport UserService from '../../services/user-service';\nimport { Alert, Button, Card, CardBody } from 'reactstrap';\n\nvar ValidateForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ValidateForm, _React$Component);\n\n  function ValidateForm(props) {\n    var _this;\n\n    _classCallCheck(this, ValidateForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ValidateForm).call(this, props));\n\n    _this.getEmail = function (url) {\n      var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n\n      if (queryString) {\n        var arr = queryString.split('&');\n\n        for (var i = 0; i < arr.length; i++) {\n          var a = arr[i].split('=');\n          var paramName = a[0];\n\n          if (paramName === 'email') {\n            var paramValue = typeof a[1] === 'undefined' ? true : a[1];\n            paramName = paramName.toLowerCase();\n            return paramValue;\n          }\n        }\n      }\n    };\n\n    _this.onSubmit = function (e) {\n      // console.log(\"test\")\n      e.preventDefault();\n      UserService.validAccount(_this.getEmail()).then(function (res) {\n        if (res.status) {\n          _this.setState({\n            color: \"success\",\n            display: true,\n            message: res.message\n          });\n\n          return React.createElement(Redirect, {\n            to: \"/servers\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          });\n        } else {\n          _this.setState({\n            color: \"danger\",\n            display: true,\n            message: res.message\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      color: 'success',\n      display: false,\n      message: '',\n      redirect: false\n    };\n    return _this;\n  }\n\n  _createClass(ValidateForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"bg-login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        style: {\n          fontWeight: 'bold',\n          color: '#1720298a'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Valide your account\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        color: this.state.color,\n        isOpen: this.state.display,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.message), React.createElement(Button, {\n        className: \"btn-block\",\n        color: \"success\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Finish !\"))))));\n    }\n  }]);\n\n  return ValidateForm;\n}(React.Component);\n\nexport default ValidateForm;","map":{"version":3,"sources":["/usr/app/src/src/components/Validation/Validation.jsx"],"names":["React","Redirect","UserService","Alert","Button","Card","CardBody","ValidateForm","props","getEmail","url","queryString","split","window","location","search","slice","arr","i","length","a","paramName","paramValue","toLowerCase","onSubmit","e","preventDefault","validAccount","then","res","status","setState","color","display","message","state","email","password","redirect","fontWeight","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport UserService from '../../services/user-service';\nimport { Alert, Button, Card, CardBody } from 'reactstrap';\n\nclass ValidateForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            color: 'success',\n            display: false,\n            message: '',\n            redirect: false\n        }\n    }\n\n    getEmail = (url) => {\n        let queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n        if (queryString) {\n            let arr = queryString.split('&');\n            for (let i = 0; i < arr.length; i++) {\n                let a = arr[i].split('=');\n                let paramName = a[0];\n                if (paramName === 'email') {\n                    let paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n                    paramName = paramName.toLowerCase();\n                    return paramValue\n                }\n            }\n        }\n    }   \n\n    onSubmit = (e) => {\n        // console.log(\"test\")\n        e.preventDefault();\n        UserService.validAccount(this.getEmail()).then((res) => {\n            if (res.status) {\n                this.setState({ color: \"success\", display: true, message: res.message });\n                return <Redirect to=\"/servers\" />;\n            }\n            else {\n                this.setState({ color: \"danger\", display: true, message: res.message })\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"bg-login\">\n                <div className=\"content\">\n                    <div className=\"login-form\">\n                        <Card>\n                            <CardBody>\n                                <h1 className=\"text-center\" style={{ fontWeight: 'bold', color: '#1720298a' }}>\n                                    Valide your account\n                                </h1>\n                                <hr />\n                                <Alert color={this.state.color} isOpen={this.state.display}>{this.state.message}</Alert>\n                                <Button className=\"btn-block\" color=\"success\" onClick={this.onSubmit}>Finish !</Button>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default ValidateForm;\n"]},"metadata":{},"sourceType":"module"}