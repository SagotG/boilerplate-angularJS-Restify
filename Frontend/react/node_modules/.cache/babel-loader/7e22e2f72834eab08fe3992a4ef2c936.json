{"ast":null,"code":"import _defineProperty from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/usr/app/src/src/components/Profil/ProfilInfo.jsx\";\nimport React from 'react';\nimport UserService from '../../services/user-service';\nimport { Alert, Button, Card, CardBody, Container, Input } from 'reactstrap';\n\nvar ProfilInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfilInfo, _React$Component);\n\n  function ProfilInfo(props) {\n    var _this;\n\n    _classCallCheck(this, ProfilInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfilInfo).call(this, props));\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmitUpdatePassword = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          CurrentPassword = _this$state.CurrentPassword,\n          NewPassword = _this$state.NewPassword,\n          RetypePassword = _this$state.RetypePassword;\n\n      if (NewPassword !== RetypePassword) {\n        _this.setState({\n          message: \"New password does not correspond to confirm password data field.\",\n          display: true\n        });\n      } else if (NewPassword === \"\" || RetypePassword === \"\") {\n        _this.setState({\n          message: \"Password data field are empty\",\n          display: true\n        });\n      } else {\n        UserService.resetPassword(CurrentPassword, NewPassword).then(function (value) {\n          if (value.status === false) {\n            _this.setState({\n              message: value.message,\n              display: true,\n              displaySuccess: false\n            });\n          } else if (value.status === true) {\n            _this.setState({\n              message: value.message,\n              displaySuccess: true,\n              display: false\n            });\n          }\n        }).catch(function (err) {\n          _this.setState({\n            error: err,\n            display: true,\n            displaySuccess: false\n          });\n\n          console.error(err);\n        });\n      }\n    };\n\n    _this.closeAlert = function () {\n      _this.setState({\n        message: \"\",\n        display: false,\n        displaySuccess: false\n      });\n    };\n\n    _this.upload = function (file) {\n      UserService.uploadPicture(\"./file/\" + localStorage.getItem(\"email\"), file).then(function (response) {\n        console.log(response);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    };\n\n    _this.state = {\n      CurrentPassword: '',\n      NewPassword: '',\n      RetypePassword: '',\n      message: '',\n      display: false,\n      displaySuccess: false\n    };\n    return _this;\n  }\n\n  _createClass(ProfilInfo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-1 col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn btn-circle btn-lg\",\n        color: \"light\",\n        title: \"Back\",\n        style: {\n          borderRadius: '25px',\n          padding: '11px 12px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"glyphicon glyphicon-ok\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-center\",\n        style: {\n          fontWeight: 'bold',\n          color: '#172029'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Reset Password\"), React.createElement(Alert, {\n        color: \"success\",\n        isOpen: this.state.display,\n        toggle: this.closeAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.message), React.createElement(Alert, {\n        color: \"danger\",\n        isOpen: this.state.display,\n        toggle: this.closeAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"form\", {\n        onSubmit: this.onSubmitUpdatePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"form-control\",\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Current Password\",\n        value: this.state.CurrentPassword,\n        onChange: this.onChange,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Input, {\n        className: \"form-control\",\n        type: \"password\",\n        name: \"new-password\",\n        placeholder: \"New Password\",\n        value: this.state.NewPassword,\n        onChange: this.onChange,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Input, {\n        className: \"form-control\",\n        type: \"password\",\n        name: \"confirm-password\",\n        placeholder: \"Retype New Password\",\n        value: this.state.RetypePassword,\n        onChange: this.onChange,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-block\",\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Update Password\"))))))));\n    }\n  }]);\n\n  return ProfilInfo;\n}(React.Component);\n\nexport default ProfilInfo;","map":{"version":3,"sources":["/usr/app/src/src/components/Profil/ProfilInfo.jsx"],"names":["React","UserService","Alert","Button","Card","CardBody","Container","Input","ProfilInfo","props","onChange","e","setState","target","name","value","onSubmitUpdatePassword","preventDefault","state","CurrentPassword","NewPassword","RetypePassword","message","display","resetPassword","then","status","displaySuccess","catch","err","error","console","closeAlert","upload","file","uploadPicture","localStorage","getItem","response","log","borderRadius","padding","fontWeight","color","justifyContent","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,SAAxC,EAAmDC,KAAnD,QAAgE,YAAhE;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAYnBC,QAZmB,GAYR,UAACC,CAAD,EAAO;AAChB,YAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,IAA1B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C;AACD,KAdkB;;AAAA,UAgBnBC,sBAhBmB,GAgBM,UAACL,CAAD,EAAO;AAC9BA,MAAAA,CAAC,CAACM,cAAF;AAD8B,wBAG2B,MAAKC,KAHhC;AAAA,UAGtBC,eAHsB,eAGtBA,eAHsB;AAAA,UAGLC,WAHK,eAGLA,WAHK;AAAA,UAGQC,cAHR,eAGQA,cAHR;;AAK9B,UAAID,WAAW,KAAKC,cAApB,EAAoC;AAClC,cAAKT,QAAL,CAAc;AAAEU,UAAAA,OAAO,EAAE,kEAAX;AAA+EC,UAAAA,OAAO,EAAE;AAAxF,SAAd;AACD,OAFD,MAGK,IAAIH,WAAW,KAAK,EAAhB,IAAsBC,cAAc,KAAK,EAA7C,EAAiD;AACpD,cAAKT,QAAL,CAAc;AAAEU,UAAAA,OAAO,EAAE,+BAAX;AAA4CC,UAAAA,OAAO,EAAE;AAArD,SAAd;AACD,OAFI,MAEE;AACLtB,QAAAA,WAAW,CAACuB,aAAZ,CAA0BL,eAA1B,EAA2CC,WAA3C,EAAwDK,IAAxD,CAA6D,UAACV,KAAD,EAAW;AACtE,cAAIA,KAAK,CAACW,MAAN,KAAiB,KAArB,EAA4B;AAC1B,kBAAKd,QAAL,CAAc;AAAEU,cAAAA,OAAO,EAAEP,KAAK,CAACO,OAAjB;AAA0BC,cAAAA,OAAO,EAAE,IAAnC;AAAyCI,cAAAA,cAAc,EAAE;AAAzD,aAAd;AACD,WAFD,MAGK,IAAIZ,KAAK,CAACW,MAAN,KAAiB,IAArB,EAA2B;AAC9B,kBAAKd,QAAL,CAAc;AAAEU,cAAAA,OAAO,EAAEP,KAAK,CAACO,OAAjB;AAA0BK,cAAAA,cAAc,EAAE,IAA1C;AAAgDJ,cAAAA,OAAO,EAAE;AAAzD,aAAd;AACD;AACF,SAPD,EAOGK,KAPH,CAOS,UAACC,GAAD,EAAS;AAChB,gBAAKjB,QAAL,CAAc;AAAEkB,YAAAA,KAAK,EAAED,GAAT;AAAcN,YAAAA,OAAO,EAAE,IAAvB;AAA6BI,YAAAA,cAAc,EAAE;AAA7C,WAAd;;AACAI,UAAAA,OAAO,CAACD,KAAR,CAAcD,GAAd;AACD,SAVD;AAWD;AACF,KAvCkB;;AAAA,UAyCnBG,UAzCmB,GAyCN,YAAM;AACjB,YAAKpB,QAAL,CAAc;AAAEU,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,OAAO,EAAE,KAAxB;AAA+BI,QAAAA,cAAc,EAAE;AAA/C,OAAd;AACD,KA3CkB;;AAAA,UA6CnBM,MA7CmB,GA6CV,UAAUC,IAAV,EAAgB;AACvBjC,MAAAA,WAAW,CAACkC,aAAZ,CAA0B,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAtC,EAAqEH,IAArE,EAA2ET,IAA3E,CAAgF,UAACa,QAAD,EAAc;AAC5FP,QAAAA,OAAO,CAACQ,GAAR,CAAYD,QAAZ;AACD,OAFD,EAEGV,KAFH,CAES,UAACC,GAAD,EAAS;AAChBE,QAAAA,OAAO,CAACD,KAAR,CAAcD,GAAd;AACD,OAJD;AAKD,KAnDkB;;AAEjB,UAAKX,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE,EADN;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,cAAc,EAAE,EAHL;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,OAAO,EAAE,KALE;AAMXI,MAAAA,cAAc,EAAE;AANL,KAAb;AAFiB;AAUlB;;;;6BA2CQ;AACP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,KAAK,EAAC,OAAhD;AAAwD,QAAA,KAAK,EAAC,MAA9D;AAAqE,QAAA,KAAK,EAAE;AAAEa,UAAAA,YAAY,EAAE,MAAhB;AAAwBC,UAAAA,OAAO,EAAE;AAAjC,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAG,QAAA,KAAK,EAAC,wBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,EAOE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAA4B,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,KAAK,EAAE;AAA7B,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAIE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAuB,QAAA,MAAM,EAAE,KAAKzB,KAAL,CAAWK,OAA1C;AAAmD,QAAA,MAAM,EAAE,KAAKS,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKd,KAAL,CAAWI,OADd,CAJF,EAOE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAsB,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,OAAzC;AAAkD,QAAA,MAAM,EAAE,KAAKS,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKd,KAAL,CAAWI,OADd,CAPF,EAWE;AAAM,QAAA,QAAQ,EAAE,KAAKN,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,WAAW,EAAC,kBAJd;AAKE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,eALpB;AAME,QAAA,QAAQ,EAAE,KAAKT,QANjB;AAOE,QAAA,YAAY,EAAC,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,WAAW,EAAC,cAJd;AAKE,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE,WALpB;AAME,QAAA,QAAQ,EAAE,KAAKV,QANjB;AAOE,QAAA,YAAY,EAAC,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,EAqBE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,kBAHP;AAIE,QAAA,WAAW,EAAC,qBAJd;AAKE,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWG,cALpB;AAME,QAAA,QAAQ,EAAE,KAAKX,QANjB;AAOE,QAAA,YAAY,EAAC,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,EA+BE;AAAK,QAAA,KAAK,EAAE;AAAEa,UAAAA,OAAO,EAAE,MAAX;AAAmBqB,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAA2D,QAAA,EAAE,EAAE,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CA/BF,CAXF,CADF,CADF,CADF,CAPF,CADF;AA+DD;;;;EAtHsB5C,KAAK,CAAC6C,S;;AAyH/B,eAAerC,UAAf","sourcesContent":["import React from 'react';\nimport UserService from '../../services/user-service';\nimport { Alert, Button, Card, CardBody, Container, Input } from 'reactstrap';\n\nclass ProfilInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentPassword: '',\n      NewPassword: '',\n      RetypePassword: '',\n      message: '',\n      display: false,\n      displaySuccess: false\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmitUpdatePassword = (e) => {\n    e.preventDefault();\n\n    const { CurrentPassword, NewPassword, RetypePassword } = this.state;\n\n    if (NewPassword !== RetypePassword) {\n      this.setState({ message: \"New password does not correspond to confirm password data field.\", display: true });\n    }\n    else if (NewPassword === \"\" || RetypePassword === \"\") {\n      this.setState({ message: \"Password data field are empty\", display: true });\n    } else {\n      UserService.resetPassword(CurrentPassword, NewPassword).then((value) => {\n        if (value.status === false) {\n          this.setState({ message: value.message, display: true, displaySuccess: false });\n        }\n        else if (value.status === true) {\n          this.setState({ message: value.message, displaySuccess: true, display: false });\n        }\n      }).catch((err) => {\n        this.setState({ error: err, display: true, displaySuccess: false });\n        console.error(err)\n      })\n    }\n  }\n\n  closeAlert = () => {\n    this.setState({ message: \"\", display: false, displaySuccess: false });\n  }\n\n  upload = function (file) {\n    UserService.uploadPicture(\"./file/\" + localStorage.getItem(\"email\"), file).then((response) => {\n      console.log(response);\n    }).catch((err) => {\n      console.error(err);\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className=\"col-xs-1 col-1\">\n          <Button className=\"btn btn-circle btn-lg\" color=\"light\" title=\"Back\" style={{ borderRadius: '25px', padding: '11px 12px'}}>\n            {/* <i style={{ transform: 'rotate(180deg)', fontSize:'24px'}} className=\"material-icons\">arrow_right_alt</i> */}\n            <i class=\"glyphicon glyphicon-ok\"></i>\n          </Button>\n        </div>\n        <div className=\"content\">\n          <div className=\"login-form\">\n            <Card>\n              <CardBody>\n                <h3 className=\"text-center\" style={{ fontWeight: 'bold', color: '#172029' }}>\n                  Reset Password\n              </h3>\n                <Alert color=\"success\" isOpen={this.state.display} toggle={this.closeAlert}>\n                  {this.state.message}\n                </Alert>\n                <Alert color=\"danger\" isOpen={this.state.display} toggle={this.closeAlert}>\n                  {this.state.message}\n                </Alert>\n\n                <form onSubmit={this.onSubmitUpdatePassword}>\n                  <Input\n                    className='form-control'\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Current Password\"\n                    value={this.state.CurrentPassword}\n                    onChange={this.onChange}\n                    autoComplete=\"off\"\n                  />\n                  <br></br>\n                  <Input\n                    className='form-control'\n                    type=\"password\"\n                    name=\"new-password\"\n                    placeholder=\"New Password\"\n                    value={this.state.NewPassword}\n                    onChange={this.onChange}\n                    autoComplete=\"off\"\n                  />\n                  <br></br>\n                  <Input\n                    className='form-control'\n                    type=\"password\"\n                    name=\"confirm-password\"\n                    placeholder=\"Retype New Password\"\n                    value={this.state.RetypePassword}\n                    onChange={this.onChange}\n                    autoComplete=\"off\"\n                  />\n\n                  <div style={{ display: 'flex', justifyContent: 'center' }} sm={12}>\n                    <Button className=\"btn-block\" color=\"success\">Update Password</Button>\n                  </div>\n                </form>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n        </Container>\n    );\n  }\n}\n\nexport default ProfilInfo;\n"]},"metadata":{},"sourceType":"module"}