{"ast":null,"code":"import _defineProperty from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/guillaume/rendu/drum-kit/react/src/components/Servers/ServersList.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Card, Col, CardBody, CardHeader, Container, FormGroup, Input, Modal, ModalBody, ModalHeader, ModalFooter, Row } from \"reactstrap\";\nimport ServiceWorker from \"../../services/user-service\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n\n      console.log([e.target.name], e.target.value);\n    };\n\n    _this.getTasks = function () {\n      var listTasks = [];\n      ServiceWorker.getTasks().then(function (response) {\n        response.forEach(function (data) {\n          listTasks.push({\n            id: data._id,\n            task: data.task,\n            status: data.status\n          });\n\n          _this.setState({\n            tasks: listTasks\n          });\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.deleteTask = function (id) {\n      ServiceWorker.deleteTask(id).then(function (response) {\n        if (response.status >= 200 || response.status <= 199) {\n          _this.getTasks();\n        }\n      });\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.openInfo = function (x) {\n      console.log(x);\n\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal,\n          task: x.task,\n          status: x.status\n        };\n      });\n    };\n\n    _this.openModalCreate = function () {\n      _this.setState(function (prevState) {\n        return {\n          modalCreate: !prevState.modalCreate\n        };\n      });\n    };\n\n    _this.createTask = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          task = _this$state.task,\n          status = _this$state.status;\n      ServiceWorker.createTask(task, status).then(function (response) {\n        console.log(response);\n\n        if (response.status >= 200 || response.status <= 199) {\n          console.log(\"success\");\n\n          _this.setState(function (prevState) {\n            return {\n              modalCreate: !prevState.modalCreate\n            };\n          });\n\n          _this.getTasks();\n        }\n      });\n    };\n\n    _this.state = {\n      tasks: [],\n      modal: false,\n      modalCreate: false,\n      backdrop: true,\n      id: \"\",\n      task: \"\",\n      status: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTasks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = this.state.tasks;\n      var lisTasks = list.map(function (x) {\n        return React.createElement(Card, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, x.task), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, x.status), React.createElement(Button, {\n          color: \"default\",\n          className: \"pull-right\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.openInfo(x);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Show\"), React.createElement(Button, {\n          color: \"danger\",\n          className: \"pull-right\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.deleteTask(x.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      return React.createElement(React.Fragment, null, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"List Tasks\"), React.createElement(Button, {\n        size: \"md\",\n        color: \"primary\",\n        className: \"pull-right\",\n        onClick: function onClick() {\n          return _this2.openModalCreate();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Create\")), lisTasks)))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        backdrop: this.state.backdrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.task)), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.state.status))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(Modal, {\n        isOpen: this.state.modalCreate,\n        toggle: this.toggle,\n        className: this.props.className,\n        backdrop: this.state.backdrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Create task\")), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"form-control\",\n        name: \"task\",\n        value: this.state.task,\n        placeholder: \"Task\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"form-control\",\n        name: \"status\",\n        value: this.state.status,\n        placeholder: \"Status\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.createTask.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/guillaume/rendu/drum-kit/react/src/components/Servers/ServersList.jsx"],"names":["React","Component","Button","Card","Col","CardBody","CardHeader","Container","FormGroup","Input","Modal","ModalBody","ModalHeader","ModalFooter","Row","ServiceWorker","Dashboard","props","onChange","e","setState","target","name","value","console","log","getTasks","listTasks","then","response","forEach","data","push","id","_id","task","status","tasks","catch","err","deleteTask","toggle","prevState","modal","openInfo","x","openModalCreate","modalCreate","createTask","preventDefault","state","backdrop","list","lisTasks","map","className","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Card,\n  Col,\n  CardBody,\n  CardHeader,\n  Container,\n  FormGroup,\n  Input,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Row\n} from \"reactstrap\";\nimport ServiceWorker from \"../../services/user-service\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      modal: false,\n      modalCreate: false,\n      backdrop: true,\n      id: \"\",\n      task: \"\",\n      status: \"\"\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log([e.target.name], e.target.value);\n  };\n\n  componentDidMount() {\n    this.getTasks();\n  }\n\n  getTasks = () => {\n    let listTasks = [];\n    ServiceWorker.getTasks()\n      .then(response => {\n        response.forEach(data => {\n          listTasks.push({\n            id: data._id,\n            task: data.task,\n            status: data.status\n          });\n          this.setState({ tasks: listTasks });\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  deleteTask = id => {\n    ServiceWorker.deleteTask(id).then(response => {\n      if (response.status >= 200 || response.status <= 199) {\n        this.getTasks();\n      }\n    });\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  };\n\n  openInfo = x => {\n    console.log(x);\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      task: x.task,\n      status: x.status\n    }));\n  };\n\n  openModalCreate = () => {\n    this.setState(prevState => ({ modalCreate: !prevState.modalCreate }));\n  };\n\n  createTask = (e) => {\n    e.preventDefault();\n    const { task, status } = this.state;\n    ServiceWorker.createTask(task, status).then(response => {\n      console.log(response);\n      if (response.status >= 200 || response.status <= 199) {\n        console.log(\"success\");\n        this.setState(prevState => ({ modalCreate: !prevState.modalCreate }));\n        this.getTasks();\n      }\n    });\n  };\n\n  render() {\n    let list = this.state.tasks;\n    const lisTasks = list.map(x => (\n      <Card key={x}>\n        <CardBody>\n          <Col xs={10}>\n            <h3>{x.task}</h3>\n            <br></br>\n            <p>{x.status}</p>\n            <Button\n              color=\"default\"\n              className=\"pull-right\"\n              size=\"sm\"\n              onClick={() => this.openInfo(x)}\n            >\n              Show\n            </Button>\n            <Button\n              color=\"danger\"\n              className=\"pull-right\"\n              size=\"sm\"\n              onClick={() => this.deleteTask(x.id)}\n            >\n              Delete\n            </Button>\n          </Col>\n        </CardBody>\n      </Card>\n    ));\n    return (\n      <>\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <Card>\n                <CardHeader>\n                  <h1>List Tasks</h1>\n                  <Button\n                    size=\"md\"\n                    color=\"primary\"\n                    className=\"pull-right\"\n                    onClick={() => this.openModalCreate()}\n                  >\n                    Create\n                  </Button>\n                </CardHeader>\n                {lisTasks}\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n          backdrop={this.state.backdrop}\n        >\n          <ModalHeader toggle={this.toggle}>\n            <h1>{this.state.task}</h1>\n          </ModalHeader>\n          <Container fluid>\n            <ModalBody>\n              <p>{this.state.status}</p>\n            </ModalBody>\n          </Container>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n        <Modal\n          isOpen={this.state.modalCreate}\n          toggle={this.toggle}\n          className={this.props.className}\n          backdrop={this.state.backdrop}\n        >\n          <ModalHeader toggle={this.toggle}>\n            <h1>Create task</h1>\n          </ModalHeader>\n          <Container fluid>\n            <ModalBody>\n              <FormGroup>\n                <Input\n                  className=\"form-control\"\n                  name=\"task\"\n                  value={this.state.task}\n                  placeholder=\"Task\"\n                  onChange={this.onChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  className=\"form-control\"\n                  name=\"status\"\n                  value={this.state.status}\n                  placeholder=\"Status\"\n                  onChange={this.onChange}\n                />\n              </FormGroup>\n            </ModalBody>\n          </Container>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n            <Button color=\"primary\" onClick={this.createTask.bind(this)}>\n              Submit\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}