{"ast":null,"code":"import _classCallCheck from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/usr/app/src/src/components/Header/Header.jsx\";\nimport React from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Container } from 'reactstrap';\nimport dashboardRoutes from '../../routes/dashboard';\nimport { createBrowserHistory } from 'history';\nvar history = createBrowserHistory();\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n\n    _this.setDate = function () {\n      return new Date().now();\n    };\n\n    _this.state = {\n      logged: false,\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.dropdownToggle = _this.dropdownToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.state.isOpen) {\n        this.setState({\n          color: \"transparent\"\n        });\n      } else {\n        this.setState({\n          color: \"black\"\n        });\n      }\n\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"dropdownToggle\",\n    value: function dropdownToggle(e) {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"getBrand\",\n    value: function getBrand() {\n      var _this2 = this;\n\n      var name;\n      dashboardRoutes.map(function (prop, key) {\n        if (prop.collapse) {\n          prop.views.map(function (prop, key) {\n            if (prop.path === _this2.props.location.pathname) {\n              name = prop.name;\n            }\n\n            return null;\n          });\n        } else {\n          if (prop.redirect) {\n            if (prop.path === _this2.props.location.pathname) {\n              name = prop.name;\n            }\n          } else {\n            if (prop.path === _this2.props.location.pathname) {\n              name = prop.name;\n            }\n          }\n        }\n\n        return null;\n      });\n      return name;\n    }\n  }, {\n    key: \"openSidebar\",\n    value: function openSidebar() {\n      document.documentElement.classList.toggle('nav-open');\n      this.refs.sidebarToggle.classList.toggle('toggled');\n    } // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"updateColor\",\n    value: function updateColor() {\n      if (window.innerWidth < 2100 && this.state.isOpen) {\n        this.setState({\n          color: \"white\"\n        });\n      } else {\n        this.setState({\n          color: \"black\"\n        });\n      }\n    }\n  }, {\n    key: \"onClickAccount\",\n    value: function onClickAccount() {\n      history.push('/profil');\n      window.location.reload();\n    }\n  }, {\n    key: \"onClickLogout\",\n    value: function onClickLogout() {\n      localStorage.clear();\n      window.location.reload();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setDate();\n      var isLogged = localStorage.getItem('token');\n\n      if (isLogged) {\n        this.setState({\n          logged: true\n        });\n      }\n\n      window.addEventListener(\"resize\", this.updateColor.bind(this));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (window.innerWidth < 2100 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-open') !== -1) {\n        document.documentElement.classList.toggle('nav-open');\n        this.refs.sidebarToggle.classList.toggle('toggled');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Navbar, {\n        color: this.props.location.pathname.indexOf('full-screen-maps') !== -1 ? \"white\" : this.state.color,\n        expand: \"lg\",\n        className: this.props.location.pathname.indexOf('full-screen-maps') !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + this.state.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        ref: \"sidebarToggle\",\n        className: \"navbar-toggler\",\n        onClick: function onClick() {\n          return _this3.openSidebar();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), React.createElement(NavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        className: \"justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        nav: true,\n        isOpen: this.state.dropdownOpen,\n        toggle: function toggle(e) {\n          return _this3.dropdownToggle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        nav: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"now-ui-icons users_single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-lg-none d-md-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.setDate))), !this.state.isLogged ? React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        tag: \"a\",\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          return _this3.onClickAccount();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Account\"), React.createElement(DropdownItem, {\n        tag: \"a\",\n        style: {\n          color: 'red',\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          return _this3.onClickLogout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Log out\")) : null, this.state.isLogged ? React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        tag: \"a\",\n        style: {\n          cursor: 'pointer',\n          color: '#2ba5ac'\n        },\n        href: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Log In\"), React.createElement(DropdownItem, {\n        tag: \"a\",\n        style: {\n          cursor: 'pointer',\n          color: '#ffb136'\n        },\n        href: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Sign Up\")) : null)))));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport default Header;","map":{"version":3,"sources":["/usr/app/src/src/components/Header/Header.jsx"],"names":["React","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","Dropdown","DropdownItem","DropdownToggle","DropdownMenu","Container","dashboardRoutes","createBrowserHistory","history","Header","props","setDate","Date","now","state","logged","isOpen","dropdownOpen","color","toggle","bind","dropdownToggle","setState","e","name","map","prop","key","collapse","views","path","location","pathname","redirect","document","documentElement","classList","refs","sidebarToggle","window","innerWidth","push","reload","localStorage","clear","isLogged","getItem","addEventListener","updateColor","className","indexOf","openSidebar","cursor","onClickAccount","onClickLogout","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, Dropdown, DropdownItem, DropdownToggle,DropdownMenu, Container } from 'reactstrap';\nimport dashboardRoutes from '../../routes/dashboard';\n\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logged: false,\n            isOpen: false,\n            dropdownOpen: false,\n            color: \"transparent\"\n        };\n        this.toggle = this.toggle.bind(this);\n        this.dropdownToggle = this.dropdownToggle.bind(this);\n    }\n\n    toggle() {\n        if (this.state.isOpen) {\n            this.setState({\n                color: \"transparent\"\n            });\n        } else {\n            this.setState({\n                color: \"black\"\n            });\n        }\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    dropdownToggle(e) {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    getBrand() {\n        var name;\n        dashboardRoutes.map((prop, key) => {\n            if (prop.collapse) {\n                prop.views.map((prop, key) => {\n                    if (prop.path === this.props.location.pathname) {\n                        name = prop.name;\n                    }\n                    return null;\n                })\n            } else {\n                if (prop.redirect) {\n                    if (prop.path === this.props.location.pathname) {\n                        name = prop.name;\n                    }\n                } else {\n                    if (prop.path === this.props.location.pathname) {\n                        name = prop.name;\n                    }\n                }\n            }\n            return null;\n        })\n        return name;\n    }\n\n    openSidebar() {\n        document.documentElement.classList.toggle('nav-open');\n        this.refs.sidebarToggle.classList.toggle('toggled');\n    }\n\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n    updateColor() {\n        if (window.innerWidth < 2100 && this.state.isOpen) {\n            this.setState({\n                color: \"white\"\n            });\n        } else {\n            this.setState({\n                color: \"black\"\n            });\n        }\n    }\n\n    onClickAccount() {\n        history.push('/profil');\n        window.location.reload();\n    }\n\n    onClickLogout() {\n       localStorage.clear();\n       window.location.reload();\n    }\n\n\n    componentDidMount() {\n        this.setDate();\n        let isLogged = localStorage.getItem('token');\n        if (isLogged) {\n            this.setState({ logged: true });\n        }\n        window.addEventListener(\"resize\", this.updateColor.bind(this));\n    }\n\n    componentDidUpdate(e) {\n        if (window.innerWidth < 2100 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-open') !== -1) {\n            document.documentElement.classList.toggle('nav-open');\n            this.refs.sidebarToggle.classList.toggle('toggled');\n        }\n    }\n\n    setDate = () => {\n        return (new Date().now());\n\n    }\n\n    render() {\n        return (\n            <Navbar\n                color={this.props.location.pathname.indexOf('full-screen-maps') !== -1 ? \"white\" : this.state.color} expand=\"lg\"\n                className={\n                    this.props.location.pathname.indexOf('full-screen-maps') !== -1 ?\n                        \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + this.state.color}>\n                <Container fluid>\n                    <div className=\"navbar-wrapper\">\n                        <div className=\"navbar-toggle\">\n                            <button type=\"button\" ref=\"sidebarToggle\" className=\"navbar-toggler\" onClick={() => this.openSidebar()}>\n                                <span className=\"navbar-toggler-bar bar1\"></span>\n                                <span className=\"navbar-toggler-bar bar2\"></span>\n                                <span className=\"navbar-toggler-bar bar3\"></span>\n                            </button>\n                        </div>\n                        <NavbarBrand href=\"/\"></NavbarBrand>\n                    </div>\n                    <NavbarToggler onClick={this.toggle}>\n                        <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                        <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                        <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                    </NavbarToggler>\n                    <Collapse isOpen={this.state.isOpen} navbar className=\"justify-content-end\">\n                        <Nav navbar>\n                            <Dropdown nav isOpen={this.state.dropdownOpen} toggle={(e) => this.dropdownToggle(e)}>\n                                <DropdownToggle caret nav>\n                                    <i className=\"now-ui-icons users_single-02\"></i>\n                                    <p>\n                                        <span className=\"d-lg-none d-md-block\">{this.setDate}</span>\n                                    </p>\n                                </DropdownToggle>\n                                { !this.state.isLogged ? <DropdownMenu right>\n                                    <DropdownItem tag=\"a\" style={{ cursor: 'pointer' }} onClick={() => this.onClickAccount()}>Account</DropdownItem>\n                                    <DropdownItem tag=\"a\" style={{ color: 'red', cursor: 'pointer' }} onClick={() => this.onClickLogout()}>Log out</DropdownItem>\n                                </DropdownMenu> : null }\n                                { this.state.isLogged ? <DropdownMenu right>\n                                    <DropdownItem tag=\"a\" style={{ cursor: 'pointer',color: '#2ba5ac' }} href=\"/login\">Log In</DropdownItem>\n                                    <DropdownItem tag=\"a\" style={{ cursor: 'pointer',color: '#ffb136' }} href=\"/register\">Sign Up</DropdownItem>\n                                </DropdownMenu> : null }\n\n                            </Dropdown>\n                        </Nav>\n                    </Collapse>\n                </Container>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}