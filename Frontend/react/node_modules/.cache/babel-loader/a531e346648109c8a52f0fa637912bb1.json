{"ast":null,"code":"import _defineProperty from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/guillaume/rendu/drum-kit/react/src/components/Servers/ServersList.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Col, CardBody, CardHeader, Button, Row, Container } from \"reactstrap\";\nimport ServiceWorker from \"../../services/user-service\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.getTasks = function () {\n      var listTasks = [];\n      ServiceWorker.getTasks().then(function (response) {\n        response.forEach(function (data) {\n          listTasks.push({\n            id: data._id,\n            task: data.task,\n            status: data.status\n          });\n\n          _this.setState({\n            tasks: listTasks\n          });\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.state = {\n      tasks: []\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTasks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var list = this.state.tasks;\n      var lisTasks = list.map(function (x) {\n        return React.createElement(Card, {\n          key: x.ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, x.task), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, x.status)));\n      });\n      return React.createElement(React.Fragment, null, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"List Tasks\")), lisTasks)))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/guillaume/rendu/drum-kit/react/src/components/Servers/ServersList.jsx"],"names":["React","Component","Card","Col","CardBody","CardHeader","Button","Row","Container","ServiceWorker","Dashboard","props","onChange","e","setState","target","name","value","getTasks","listTasks","then","response","forEach","data","push","id","_id","task","status","tasks","catch","err","console","log","toggle","prevState","modal","state","list","lisTasks","map","x","ID"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,GANF,EAOEC,SAPF,QAQO,YARP;AASA,OAAOC,aAAP,MAA0B,6BAA1B;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAOnBC,QAPmB,GAOR,UAAAC,CAAC,EAAI;AACd,YAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,IAA1B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C;AACD,KATkB;;AAAA,UAenBC,QAfmB,GAeR,YAAM;AACf,UAAIC,SAAS,GAAG,EAAhB;AACAV,MAAAA,aAAa,CAACS,QAAd,GACGE,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBA,QAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAAC,IAAI,EAAI;AACvBJ,UAAAA,SAAS,CAACK,IAAV,CAAe;AACbC,YAAAA,EAAE,EAAEF,IAAI,CAACG,GADI;AAEbC,YAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFE;AAGbC,YAAAA,MAAM,EAAEL,IAAI,CAACK;AAHA,WAAf;;AAKA,gBAAKd,QAAL,CAAc;AAAEe,YAAAA,KAAK,EAAEV;AAAT,WAAd;AACD,SAPD;AAQD,OAVH,EAWGW,KAXH,CAWS,UAAAC,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAbH;AAcD,KA/BkB;;AAAA,UAiCnBG,MAjCmB,GAiCV,YAAM;AACb,YAAKpB,QAAL,CAAc,UAAAqB,SAAS;AAAA,eAAK;AAC1BC,UAAAA,KAAK,EAAE,CAACD,SAAS,CAACC;AADQ,SAAL;AAAA,OAAvB;AAGD,KArCkB;;AAEjB,UAAKC,KAAL,GAAa;AACXR,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;wCAMmB;AAClB,WAAKX,QAAL;AACD;;;6BA0BQ;AACP,UAAIoB,IAAI,GAAG,KAAKD,KAAL,CAAWR,KAAtB;AACA,UAAMU,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAAS,UAAAC,CAAC;AAAA,eACzB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,CAAC,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,CAAC,CAACd,IAAP,CADJ,EACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADrB,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIc,CAAC,CAACb,MAAN,CAFJ,CADF,CADyB;AAAA,OAAV,CAAjB;AAQA,aACE,0CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIGW,QAJH,CADF,CADF,CADF,CADF,CADF;AAgBD;;;;EAlEqBtC,S;;AAqExB,eAAeS,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  Col,\n  CardBody,\n  CardHeader,\n  Button,\n  Row,\n  Container\n} from \"reactstrap\";\nimport ServiceWorker from \"../../services/user-service\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  componentDidMount() {\n    this.getTasks();\n  }\n\n  getTasks = () => {\n    let listTasks = [];\n    ServiceWorker.getTasks()\n      .then(response => {\n        response.forEach(data => {\n          listTasks.push({\n            id: data._id,\n            task: data.task,\n            status: data.status\n          });\n          this.setState({ tasks: listTasks });\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  };\n\n  render() {\n    let list = this.state.tasks;\n    const lisTasks = list.map(x => (\n      <Card key={x.ID}>\n        <CardBody>\n            <h3>{x.task}</h3><br></br>\n            <p>{x.status}</p>\n        </CardBody>\n      </Card>\n    ));\n    return (\n      <>\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <Card>\n                <CardHeader>\n                  <h1>List Tasks</h1>\n                </CardHeader>\n                {lisTasks}\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}