{"ast":null,"code":"import _classCallCheck from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/usr/app/src/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/usr/app/src/src/components/Validation/Validation.jsx\";\nimport React from 'react'; // import { Redirect } from 'react-router-dom';\n\nimport UserService from '../../services/user-service';\nimport { Button, Card, CardBody } from 'reactstrap';\n\nvar ValidateForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ValidateForm, _React$Component);\n\n  function ValidateForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ValidateForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ValidateForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      UserService.validate(email, password).then(function (res) {\n        if (res.status) {\n          _this.setState({\n            color: \"success\",\n            display: true,\n            message: res.message\n          });\n        } else {\n          _this.setState({\n            color: \"danger\",\n            display: true,\n            message: res.message\n          });\n        }\n      });\n    };\n\n    _this.getAllUrlParams = function (url) {\n      var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n      var obj = {};\n\n      if (queryString) {\n        queryString = queryString.split('#')[0];\n        var arr = queryString.split('&');\n\n        for (var i = 0; i < arr.length; i++) {\n          var a = arr[i].split('=');\n          var paramName = a[0];\n          var paramValue = typeof a[1] === 'undefined' ? true : a[1];\n          paramName = paramName.toLowerCase();\n          if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n\n          if (paramName.match(/\\[(\\d+)?\\]$/)) {\n            var key = paramName.replace(/\\[(\\d+)?\\]/, '');\n            if (!obj[key]) obj[key] = [];\n\n            if (paramName.match(/\\[\\d+\\]$/)) {\n              var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n              obj[key][index] = paramValue;\n            } else {\n              obj[key].push(paramValue);\n            }\n          } else {\n            if (!obj[paramName]) {\n              obj[paramName] = paramValue;\n            } else if (obj[paramName] && typeof obj[paramName] === 'string') {\n              obj[paramName] = [obj[paramName]];\n              obj[paramName].push(paramValue);\n            } else {\n              obj[paramName].push(paramValue);\n            }\n          }\n        }\n      }\n\n      return obj;\n    };\n\n    return _this;\n  }\n\n  _createClass(ValidateForm, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(this.getAllUrlParams());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"bg-login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        style: {\n          fontWeight: 'bold',\n          color: '#1720298a'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Valide\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"btn-block\",\n        color: \"success\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ValidateForm;\n}(React.Component);\n\nexport default ValidateForm;","map":{"version":3,"sources":["/usr/app/src/src/components/Validation/Validation.jsx"],"names":["React","UserService","Button","Card","CardBody","ValidateForm","onSubmit","e","preventDefault","state","email","password","validate","then","res","status","setState","color","display","message","getAllUrlParams","url","queryString","split","window","location","search","slice","obj","arr","i","length","a","paramName","paramValue","toLowerCase","match","key","replace","index","exec","push","console","log","fontWeight","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { Redirect } from 'react-router-dom';\nimport UserService from '../../services/user-service';\nimport { Button, Card, CardBody } from 'reactstrap';\n\nclass ValidateForm extends React.Component {\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        UserService.validate(email, password).then((res) => {\n            if (res.status) {\n                this.setState({ color: \"success\", display: true, message: res.message });\n            }\n            else {\n                this.setState({ color: \"danger\", display: true, message: res.message })\n            }\n        })\n    }\n\n    getAllUrlParams = (url) => {\n        let queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n        let obj = {};\n        if (queryString) {\n            queryString = queryString.split('#')[0];\n            let arr = queryString.split('&');\n            for (let i = 0; i < arr.length; i++) {\n                let a = arr[i].split('=');\n                let paramName = a[0];\n                let paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n                paramName = paramName.toLowerCase();\n                if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n                if (paramName.match(/\\[(\\d+)?\\]$/)) {\n                    let key = paramName.replace(/\\[(\\d+)?\\]/, '');\n                    if (!obj[key]) obj[key] = [];\n                    if (paramName.match(/\\[\\d+\\]$/)) {\n                        let index = /\\[(\\d+)\\]/.exec(paramName)[1];\n                        obj[key][index] = paramValue;\n                    } else {\n                        obj[key].push(paramValue);\n                    }\n                } else {\n                    if (!obj[paramName]) {\n                        obj[paramName] = paramValue;\n                    } else if (obj[paramName] && typeof obj[paramName] === 'string') {\n                        obj[paramName] = [obj[paramName]];\n                        obj[paramName].push(paramValue);\n                    } else {\n                        obj[paramName].push(paramValue);\n                    }\n                }\n            }\n        }\n        return obj;\n    }\n    componentWillMount() {\n\n        console.log(this.getAllUrlParams())\n    }\n\n    render() {\n        return (\n            <div className=\"bg-login\">\n                <div className=\"content\">\n                    <div className=\"login-form\">\n                        <Card>\n                            <CardBody>\n                                <h1 className=\"text-center\" style={{ fontWeight: 'bold', color: '#1720298a' }}>\n                                    Valide\n                                </h1>\n                                <hr />\n                                <Button className=\"btn-block\" color=\"success\" type=\"submit\"></Button>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default ValidateForm;\n"]},"metadata":{},"sourceType":"module"}