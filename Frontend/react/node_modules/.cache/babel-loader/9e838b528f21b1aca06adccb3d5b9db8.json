{"ast":null,"code":"import _defineProperty from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/guillaume/rendu/drum-kit/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/guillaume/rendu/drum-kit/react/src/components/Servers/ServersList.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Col, CardBody, CardHeader, Button, Row, Container, Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\nimport ServiceWorker from \"../../services/user-service\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.getTasks = function () {\n      var listTasks = [];\n      ServiceWorker.getTasks().then(function (response) {\n        response.forEach(function (data) {\n          listTasks.push({\n            id: data._id,\n            task: data.task,\n            status: data.status\n          });\n\n          _this.setState({\n            tasks: listTasks\n          });\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.deleteTask = function (id) {\n      ServiceWorker.deleteTask(id).then(function (response) {\n        if (response.status >= 200 || response.status <= 199) {\n          _this.getTasks();\n        }\n      });\n    };\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.openInfo = function (x) {\n      console.log(x);\n\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal,\n          task: x.task,\n          status: x.status\n        };\n      });\n    };\n\n    _this.openModalCreate = function () {\n      _this.setState(function (prevState) {\n        return {\n          modalCreate: !prevState.modalCreate\n        };\n      });\n    };\n\n    _this.createTask = function () {\n      var _this$state = _this.state,\n          task = _this$state.task,\n          status = _this$state.status;\n      ServiceWorker.createTask(task, status).then(function (response) {\n        console.log(response);\n\n        if (response.status >= 200 || response.status <= 199) {\n          console.log('success');\n\n          _this.setState(function (prevState) {\n            return {\n              modalCreate: !prevState.modalCreate\n            };\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      tasks: [],\n      modal: false,\n      modalCreate: false,\n      backdrop: true,\n      id: \"\",\n      task: \"\",\n      status: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTasks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = this.state.tasks;\n      var lisTasks = list.map(function (x) {\n        return React.createElement(Card, {\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, x.task), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, x.status), React.createElement(Button, {\n          color: \"default\",\n          className: \"pull-right\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.openInfo(x);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Show\"), React.createElement(Button, {\n          color: \"danger\",\n          className: \"pull-right\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.deleteTask(x.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n      return React.createElement(React.Fragment, null, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"List Tasks\")), lisTasks)))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        backdrop: this.state.backdrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.state.task)), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.state.status))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(Modal, {\n        isOpen: this.state.modalCreate,\n        toggle: this.toggle,\n        className: this.props.className,\n        backdrop: this.state.backdrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Create task\")), React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"form-control\",\n        placeholder: \"Task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/guillaume/rendu/drum-kit/react/src/components/Servers/ServersList.jsx"],"names":["React","Component","Card","Col","CardBody","CardHeader","Button","Row","Container","Modal","ModalBody","ModalHeader","ModalFooter","ServiceWorker","Dashboard","props","onChange","e","setState","target","name","value","getTasks","listTasks","then","response","forEach","data","push","id","_id","task","status","tasks","catch","err","console","log","deleteTask","toggle","prevState","modal","openInfo","x","openModalCreate","modalCreate","createTask","state","backdrop","list","lisTasks","map","className"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  Col,\n  CardBody,\n  CardHeader,\n  Button,\n  Row,\n  Container,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter\n} from \"reactstrap\";\nimport ServiceWorker from \"../../services/user-service\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      modal: false,\n      modalCreate: false,\n      backdrop: true,\n      id: \"\",\n      task: \"\",\n      status: \"\"\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  componentDidMount() {\n    this.getTasks();\n  }\n\n  getTasks = () => {\n    let listTasks = [];\n    ServiceWorker.getTasks()\n      .then(response => {\n        response.forEach(data => {\n          listTasks.push({\n            id: data._id,\n            task: data.task,\n            status: data.status\n          });\n          this.setState({ tasks: listTasks });\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  deleteTask = (id) => {\n    ServiceWorker.deleteTask(id).then((response) => {\n      if (response.status >= 200 || response.status <= 199) {\n        this.getTasks();\n      }\n    })\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  };\n\n  openInfo = x => {\n    console.log(x);\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      task: x.task,\n      status: x.status\n    }));\n  };\n\n  openModalCreate = () => {\n    this.setState(prevState => ({modalCreate : !prevState.modalCreate}))\n  }\n\n  createTask = () => {\n    const {task, status} = this.state;\n    ServiceWorker.createTask(task, status).then((response) => {\n      console.log(response);\n      if (response.status >= 200 || response.status <=199) {\n        console.log('success');\n        this.setState(prevState => ({modalCreate : !prevState.modalCreate}))\n      }\n    })\n  } \n\n  render() {\n    let list = this.state.tasks;\n    const lisTasks = list.map(x => (\n      <Card key={x}>\n        <CardBody>\n          <Col xs={10}>\n            <h3>{x.task}</h3>\n            <br></br>\n            <p>{x.status}</p>\n            <Button\n              color=\"default\"\n              className=\"pull-right\"\n              size=\"sm\"\n              onClick={() => this.openInfo(x)}\n            >\n              Show\n            </Button>\n            <Button color=\"danger\" className=\"pull-right\" size=\"sm\" onClick={() => (this.deleteTask(x.id))}>\n              Delete\n            </Button>\n          </Col>\n        </CardBody>\n      </Card>\n    ));\n    return (\n      <>\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <Card>\n                <CardHeader>\n                  <h1>List Tasks</h1>\n                </CardHeader>\n                {lisTasks}\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n          backdrop={this.state.backdrop}\n        >\n          <ModalHeader toggle={this.toggle}>\n            <h1>{this.state.task}</h1>\n          </ModalHeader>\n          <Container fluid>\n            <ModalBody>\n            <p>{this.state.status}</p>\n            </ModalBody>\n          </Container>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n        <Modal\n          isOpen={this.state.modalCreate}\n          toggle={this.toggle}\n          className={this.props.className}\n          backdrop={this.state.backdrop}\n        >\n          <ModalHeader toggle={this.toggle}>\n            <h1>Create task</h1>\n          </ModalHeader>\n          <Container fluid>\n            <ModalBody>\n              <FormGroup>\n                <Input className=\"form-control\" placeholder=\"Task\"/>\n              </FormGroup>\n            </ModalBody>\n          </Container>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n            <Button color=\"primary\" onClick={this.toggle}>\n              Submit\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n      </>\n    );\n  }\n}\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}