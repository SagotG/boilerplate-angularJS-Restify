{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport Element from './Element';\nimport Parser from './Parser';\n\nvar Markup = function (_React$PureComponent) {\n  _inheritsLoose(Markup, _React$PureComponent);\n\n  function Markup() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Markup.prototype;\n\n  _proto.getContent = function getContent() {\n    var _this$props = this.props,\n        content = _this$props.content,\n        emptyContent = _this$props.emptyContent,\n        parsedContent = _this$props.parsedContent,\n        tagName = _this$props.tagName,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"content\", \"emptyContent\", \"parsedContent\", \"tagName\"]);\n\n    if (parsedContent) {\n      return parsedContent;\n    }\n\n    var markup = new Parser(content || '', props).parse();\n    return markup.length > 0 ? markup : null;\n  };\n\n  _proto.render = function render() {\n    var content = this.getContent() || this.props.emptyContent;\n    var tag = this.props.tagName || 'div';\n    return tag === 'fragment' ? React.createElement(React.Fragment, null, content) : React.createElement(Element, {\n      tagName: tag\n    }, content);\n  };\n\n  return Markup;\n}(React.PureComponent);\n\n_defineProperty(Markup, \"propTypes\", {\n  content: _pt.oneOfType([_pt.string, _pt.oneOf([null])]),\n  emptyContent: _pt.node,\n  parsedContent: _pt.node,\n  tagName: _pt.oneOfType([_pt.oneOf(['fragment']), _pt.string])\n});\n\n_defineProperty(Markup, \"defaultProps\", {\n  content: '',\n  emptyContent: null,\n  parsedContent: null,\n  tagName: 'div'\n});\n\nexport { Markup as default };","map":null,"metadata":{},"sourceType":"module"}