{"version":3,"sources":["assets/logo.png","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","components/PanelHeader/PanelHeader.jsx","services/user-service.jsx","components/Connection/ConnectionForm.jsx","views/Login/Login.js","components/Servers/ServersList.jsx","views/Servers/Servers.js","components/Register/RegisterForm.jsx","views/Register/Register.js","components/Profil/ProfilInfo.jsx","views/Profile/Profile.js","components/Admin/Admin.jsx","views/Admin/Admin.js","components/Validation/Validation.jsx","routes/dashboard.jsx","views/Validation/Validation.js","components/Header/Header.jsx","routes/index.jsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ps","PanelHeader","react_default","a","createElement","className","style","backgroundColor","this","props","content","React","Component","history","createBrowserHistory","axios","require","API_ENDPOINT","config","crossdomain","token","localStorage","getItem","UserService","email","password","post","then","response","console","log","data","status","message","setItem","users","Role","push","window","location","reload","catch","error","get","headers","Authorization","concat","delete","local","Password","Newpassword","put","newPassword","ConnectionForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","onSubmit","preventDefault","_this$state","state","login","res","color","display","setRedirect","redirect","redirectRegister","Redirect","to","reactstrap_es","fontWeight","isOpen","type","placeholder","autoComplete","onClick","Login","handleConnect","dataFromChild","IsConnected","IsLoggedUser","components_PanelHeader_PanelHeader","size","Connection_ConnectionForm","Dashboard","getUsers","usersList","getAllUsers","forEach","line","length","servers","alertServer","err","toggle","prevState","modal","closeAlert","alertFailOver","timeBeforBier","countDownDate","Date","getTime","setInterval","now","distance","beer","Math","floor","Users","map","lis","key","ID","dateFormat","CreateAt","height","marginTop","sm","xs","addonType","fontSize","align","title","striped","bordered","hover","for","id","form","md","onDelete","Servers","ServersList","RegisterForm","register","redirectLogin","RetypedPassword","diplay","role","Register","Register_RegisterForm","ProfilInfo","onSubmitUpdatePassword","CurrentPassword","NewPassword","RetypePassword","resetPassword","displaySuccess","borderRadius","padding","transform","justifyContent","Profile","Profil_ProfilInfo","Admin","toggleAddUser","modalAddUser","toggleRights","modalRights","updated","getUser","addUsers","createUser","alert","setAdmin","removeItem","deleteUser","bind","assertThisInitialized","_this2","replace","listUser","list","width","lg","marginBottom","responsive","AdminS","components_Admin_Admin","ValidateForm","getEmail","url","queryString","split","search","slice","arr","i","paramName","paramValue","toLowerCase","validAccount","dashRoutes","path","icon","component","Profil","Validation","Validation_Validation","pathTo","Header","logged","dropdownOpen","dropdownToggle","dashboardRoutes","prop","collapse","views","pathname","document","documentElement","classList","refs","sidebarToggle","innerWidth","clear","addEventListener","updateColor","indexOf","_this3","expand","fluid","ref","openSidebar","href","navbar","nav","caret","isLogged","right","tag","cursor","onClickAccount","onClickLogout","logo","indexRoutes","navigator","platform","PerfectScrollbar","mainPanel","body","destroy","action","scrollTop","scrollingElement","components_Header_Header","Switch","prop2","key2","Route","from","hist","App","Router","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","getElementById","URL","process","origin","fetch","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.56516967.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.802df459.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Nav } from 'reactstrap';\nimport PerfectScrollbar from 'perfect-scrollbar';\n\nlet ps;\nconst logo = require('../../assets/logo.png');\n\nclass Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.activeRoute.bind(this);\n    }\n\n    activeRoute(routeName) {\n        return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\n    }\n\n    componentDidMount() {\n        if (navigator.platform.indexOf('Win') > -1) {\n            ps = new PerfectScrollbar(this.refs.sidebar, { suppressScrollX: true, suppressScrollY: false });\n        }\n    }\n\n    componentWillUnmount() {\n        if (navigator.platform.indexOf('Win') > -1) {\n            ps.destroy();\n        }\n    }\n\n    render() {\n        const token = localStorage.getItem('token');\n        return (\n            <div className=\"sidebar\" data-color=\"yellow\" style={{ backgroundColor: '#172029' }}>\n                <div className=\"logo\" style={{ backgroundColor: '#172029' }}>\n                    <a href=\"/servers\">\n                        <div className=\"logo-img\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <img src={logo} className=\"logo\" alt=\"machine-over-logo\" />\n                        </div>\n                    </a>\n                </div>\n                <div className=\"sidebar-wrapper\" ref=\"sidebar\" style={{ backgroundColor: '#172029' }}>\n                    <Nav>\n                        {\n                            this.props.routes.map((prop, key) => {\n                                const role = window.localStorage.getItem('role')\n                                if (prop.redirect)\n                                    return null;\n                                if (role !== 'admin' && prop.name === 'Admin') {\n                                    return null\n                                }\n                                if (prop.name === 'Login' || prop.name === 'Register') {\n                                    return null\n                                }\n                                if (!token && prop.name === 'Account') {\n                                    return null\n                                }\n                                return (\n                                    <li className={this.activeRoute(prop.path) + (prop.pro ? \" active active-pro\" : \"\")} key={key}>\n                                        <NavLink to={prop.path} className=\"nav-link\" activeClassName=\"active\">\n                                            <i className={\"now-ui-icons \" + prop.icon}></i>\n                                            <p>{prop.name}</p>\n                                        </NavLink>\n                                    </li>\n                                );\n                            })\n                        }\n                    </Nav>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Header } from '../../components';\nimport dashboardRoutes from '../../routes/dashboard.jsx';\n\nvar ps;\n\nclass Dashboard extends React.Component {\n    componentDidMount() {\n        if (navigator.platform.indexOf('Win') > -1) {\n            ps = new PerfectScrollbar(this.refs.mainPanel);\n            document.body.classList.toggle(\"perfect-scrollbar-on\");\n        }\n    }\n\n    componentWillUnmount() {\n        if (navigator.platform.indexOf('Win') > -1) {\n            ps.destroy();\n            document.body.classList.toggle(\"perfect-scrollbar-on\");\n        }\n    }\n\n    componentDidUpdate(e) {\n        if (e.history.action === \"PUSH\") {\n            this.refs.mainPanel.scrollTop = 0;\n            document.scrollingElement.scrollTop = 0;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n\n                <div ref=\"mainPanel\">\n                    <Header {...this.props} />\n                    <Switch>\n                        {\n                            dashboardRoutes.map((prop, key) => {\n                                if (prop.collapse) {\n                                    return prop.views.map((prop2, key2) => {\n                                        return (\n                                            <Route path={prop2.path} component={prop2.component} key={key2} />\n                                        );\n                                    })\n                                }\n                                if (prop.redirect)\n                                    return (\n                                        <Redirect from={prop.path} to={prop.pathTo} key={key} />\n                                    );\n                                return (\n                                    <Route path={prop.path} component={prop.component} key={key} />\n                                );\n                            })\n                        }\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;","import React from 'react';\n\nclass PanelHeader extends React.Component{\n    render(){\n        return (\n            <div className=\"panel-header\" style={{backgroundColor: '#172029'}}>\n                {this.props.content}\n            </div>\n        );\n    }\n}\n\nexport default PanelHeader;\n","import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nconst axios = require('axios');\n\nconst API_ENDPOINT = \"http://35.198.134.25:5000/api\"\n\nconst config = {\n  crossdomain: true\n};\nconst token = localStorage.getItem('token');\n\nexport default class UserService {\n  // \n  // User management \n  // \n  static async login(email, password) {\n    return axios.post(API_ENDPOINT + '/user/login', { \"email\": email, \"password\": password }, config)\n      .then((response) => {\n        console.log(response);\n        if (response.data.status === true) {\n          if (response.data.message === 'Please, valide your email.') {\n            return (response.data)\n          }\n          localStorage.setItem('token', response.data.users.token);\n          localStorage.setItem('email', email);\n          localStorage.setItem('role', response.data.users.Role);\n          history.push('/')\n          window.location.reload()\n        }\n        return response.data\n      }).catch((error) => {\n        console.error(error)\n        return error\n      })\n  }\n\n  static async getAllUsers() {\n    if (token === '') {\n      history.push('/')\n      window.location.reload()\n    }\n    return axios.get(API_ENDPOINT + '/users', { headers: { Authorization: `Bearer ${token}` } })\n      .then((response) => {\n        return response.data.users;\n      }).catch((error) => {\n        console.error(error)\n        return error\n      })\n  }\n\n  static async deleteUser(email) {\n    if (token === '') {\n      history.push('/')\n      window.location.reload()\n    }\n    return axios.delete(API_ENDPOINT + '/user/delete', { data: { \"email\": email }, headers: { Authorization: `Bearer ${token}` } })\n      .then((response) => {\n        return response;\n      }).catch((error) => {\n        console.error(error);\n        return (error)\n      })\n  }\n\n  static async register(email, password) {\n    return axios.post(API_ENDPOINT + '/user/new', { \"email\": email, \"password\": password }, config)\n      .then((response) => {\n        if (response.data.status === true) {\n          localStorage.setItem('token', response.data.users.token);\n          localStorage.setItem('email', email);\n          localStorage.setItem('role', response.data.users.Role);\n          history.push('/')\n          window.location.reload()\n        }\n        return response.data\n      }).catch((error) => {\n        console.error(error)\n        return (error)\n      })\n  }\n\n  static async validAccount(email) {\n    let local  = token;\n    return axios.post(API_ENDPOINT + '/user/validate', { \"email\": email }, { headers: { Authorization: `Bearer ${local}` } })\n      .then((response) => {\n        console.log(response);\n        return (response.data)\n      }).catch((error) => {\n        console.error(error)\n        return (error)\n      })\n  }\n\n  static async createUser(email, password) {\n    if (token === '') {\n      history.push('/')\n      window.location.reload()\n    }\n    return axios.post(API_ENDPOINT + '/user/new', { \"email\": email, \"password\": password }, config)\n      .then((response) => {\n        return (response.data);\n      }).catch((error) => {\n        console.error(error)\n        return (error)\n      })\n  }\n\n  static async resetPassword(Password, Newpassword) {\n    if (token === '') {\n      history.push('/')\n      window.location.reload()\n    }\n    return axios.put(API_ENDPOINT + '/user/resetPassword', { \"password\": Password, \"newPassword\": Newpassword }, { headers: { Authorization: `Bearer ${token}` } })\n      .then((response) => {\n        return response.data\n      }).catch((error) => {\n        console.error(error)\n        return error\n      })\n  }\n\n  static async setAdmin(email) {\n\n    if (token === '') {\n      history.push('/')\n      window.location.reload()\n    }\n\n    return axios.post(API_ENDPOINT + '/user/setacl', { \"email\": email }, { headers: { Authorization: `Bearer ${token}` } })\n      .then((response) => {\n        return (response.data)\n      }).catch((error) => {\n        console.error(error)\n        return (error)\n      })\n  }\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport UserService from '../../services/user-service';\nimport { Alert, Button, Card, CardBody, Input } from 'reactstrap';\n\nclass ConnectionForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            color: 'success',\n            display: false,\n            message: '',\n            redirect: false\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        UserService.login(email, password).then((res) => {\n            if (res.status) {\n                console.log(res)\n                if (res.message === 'Please, valide your email.') {\n                    this.setState({ color: \"warning\", display: true, message: res.message })\n                } else {\n                    this.setState({ color: \"success\", display: true, message: res.message });\n                }\n            } else {\n                this.setState({ color: \"danger\", display: true, message: res.message })\n            }\n        })\n    }\n\n    setRedirect = () => {\n        this.setState({redirect: true});\n    }\n\n    redirectRegister = (e) => {\n        if (this.state.redirect) {\n            return <Redirect to='/register' />\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"bg-login\">\n                <div className=\"content\">\n                    <div className=\"login-form\">\n                        <Card>\n                            <CardBody>\n                                <h1 className=\"text-center\" style={{ fontWeight: 'bold', color: '#1720298a' }}>\n                                    Login\n                                </h1>\n                                <Alert color={this.state.color} isOpen={this.state.display}>{this.state.message}</Alert>\n                                <form onSubmit={this.onSubmit}>\n                                    <Input\n                                        className='form-control'\n                                        type=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.onChange}\n                                        autoComplete=\"email\"\n                                    />\n                                    <br></br>\n                                    <Input\n                                        className='form-control'\n                                        type=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        value={this.state.Password}\n                                        onChange={this.onChange}\n                                        autoComplete=\"current-password\"\n                                    />\n                                    <br />\n                                    <hr />\n                                    <Button className=\"btn-block\" color=\"success\" type=\"submit\"><b>Login</b></Button>\n                                    <div>\n                                        {this.redirectRegister()}\n                                        <Button className=\"btn-block\" color=\"light\" onClick={this.setRedirect}><b>Register</b></Button>\n                                    </div>\n                                </form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ConnectionForm;\n","import React, { Component } from \"react\";\nimport PanelHeader from '../../components/PanelHeader/PanelHeader';\nimport ConnectionForm from '../../components/Connection/ConnectionForm';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            IsLoggedUser: false\n        };\n    }\n\n    handleConnect = (dataFromChild) => {\n        this.props.IsConnected = dataFromChild;\n    };\n\n    render() {\n        if (localStorage.getItem('email') === null) {\n            return (\n                <div>\n                    <PanelHeader size=\"sm\" />\n                    <ConnectionForm></ConnectionForm>\n                </div>\n            )\n        } else {\n            return <Redirect to='/' />\n        }\n    }\n}\n\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport dateFormat from 'dateformat';\nimport UserService from \"../../services/user-service.jsx\"\nimport { Card, CardBody, Button, Row, Col, Table, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, InputGroup, InputGroupAddon } from 'reactstrap';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      message: '',\n      beer: '',\n      modal: false\n    };\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentDidMount() {\n    this.getUsers();\n    this.timeBeforBier();\n  }\n\n  getUsers = () => {\n    let usersList = []\n    UserService.getAllUsers().then((response) => {\n      console.log(response)\n      response.forEach((line) => {\n        usersList.push(line)\n      })\n      this.setState({ users: usersList });\n      if (this.state.users.length === 0 || this.users.servers === '') {\n        this.setState({ message: \"No server found\", alertServer: true });\n      }\n    }).catch((err) => {\n      this.setState({ message: err });\n    });\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  closeAlert = () => {\n    this.setState({ message: \"\", alertFailOver: false, alertServer: false, modal: false });\n  }\n\n  timeBeforBier = () => {\n    let countDownDate = new Date(\"Jun 26, 2019 17:00:00\").getTime();\n    setInterval(() => {\n      let now = new Date().getTime();\n      let distance = countDownDate - now;\n      let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      // Display the result in the element with id=\"demo\"\n      let beer = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\n      \n      this.setState({beer: beer})\n    }, 1000);\n  }\n\n  render() {\n    var beer = this.state.beer;\n    \n    let list = this.state.users;\n    const Users = list.map((lis) =>\n      <tr key={lis.ID}>\n        <td>{lis.ID}</td>\n        <td>{lis.email}</td>\n        <td>{dateFormat(lis.CreateAt, \"mmmm dS, yyyy\")}</td>\n      </tr>\n    );\n    return (\n      <div className=\"container\" style={{ height: '90vh', marginTop: '30px' }}>\n        <Row>\n          <Col sm={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col xs={5}>\n                    <h5 style={{ marginTop: '12px' }}> List Server</h5>\n                  </Col>\n                  <Col xs={6}>\n                    <InputGroup>\n                      <Input placeholder=\"Search...\" style={{ marginTop: '10px' }} type=\"text\" />\n                      <InputGroupAddon addonType=\"append\" className=\"btn btn-sm btn-success\">\n                        <i className=\"material-icons\" style={{ fontSize: '21px' }}>search</i>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </Col>\n                  <Col xs={1} align=\"right\">\n                    <button className=\"btn btn-sm btn-block btn-success pull-right\" title=\"Refresh datas from server\" >\n                      <i className=\"material-icons\" style={{ fontSize: '17px' }}>update</i>\n                    </button>\n                  </Col>\n                </Row>\n\n                <hr />\n                <h1>{beer}</h1>\n                <div className=\"table-container\">\n                  <Table striped bordered hover size=\"md\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Email</th>\n                        <th>Created at</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                    {Users}\n                    </tbody>\n                  </Table>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Form>\n          <Modal isOpen={this.state.modal} >\n            <Form>\n              <ModalHeader toggle={this.closeAlert}><strong className=\"text-center\">Add server configuration </strong></ModalHeader>\n              <ModalBody>\n                <FormGroup>\n                  <Label for=\"exampleAddress\">Address IP</Label>\n                  <Input type=\"text\" name=\"address\" id=\"exampleAddress\" placeholder=\"Address entrypoint\" />\n                </FormGroup>\n                <Row form>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"user\">User</Label>\n                      <Input type=\"text\" name=\"user\" id=\"user\" placeholder=\"Name (optional)\" />\n                    </FormGroup>\n                  </Col>\n                  <Col md={6}>\n                    <FormGroup>\n                      <Label for=\"serverIp\">Password</Label>\n                      <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row form>\n                  <Col md={12}>\n                    <FormGroup>\n                      <Label for=\"fileName\">File name</Label>\n                      <Input type=\"text\" name=\"fileName\" id=\"fileName\" />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={this.closeAlert}>Cancel</Button>\n                <Button color=\"success\" onClick={this.onDelete}>Valide</Button>\n              </ModalFooter>\n            </Form>\n          </Modal>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport ServersList from '../../components/Servers/ServersList';\nimport PanelHeader from '../../components/PanelHeader/PanelHeader';\n\nclass Servers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            IsLoggedUser: false\n        };\n    }\n    handleConnect = (dataFromChild) => {\n        this.props.IsConnected = dataFromChild;\n    };\n\n    render() {\n        if (localStorage.getItem(\"email\") === null) {\n            return <Redirect to='/login' />\n        } else {\n            return (\n                <div>\n                    <PanelHeader size=\"sm\" />\n                    <ServersList></ServersList>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Servers;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport UserService from '../../services/user-service';\nimport { Alert, Button, Card, CardBody, Input } from 'reactstrap';\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            color: '',\n            message: '',\n            display: false,\n            RetypedPassword: ''\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        UserService.register(email, password).then((res) => {\n            if (!res.status) {\n                this.setState({ display: true, color: 'danger', message: res.message });\n            } else {\n                localStorage.setItem('token', res.token);\n                this.setState({ color: 'success', display: true, message: res.message });\n                return <Redirect to='/' />\n            }\n        })\n    }\n\n    setRedirect = () => {\n        this.setState({\n            redirect: true\n        })\n    }\n\n    redirectLogin = (e) => {\n        if (this.state.redirect) {\n            return <Redirect to='/login' />\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"bg-login\">\n                <div className=\"content\">\n                    <div className=\"login-form\">\n                        <Card>\n                            <CardBody>\n                                <h1 className=\"text-center\" style={{ fontWeight: 'bold', color: '#1720298a' }}>\n                                    Sign up\n                                </h1>\n                                <Alert color={this.state.color} isOpen={this.state.diplay} role=\"alert\">{this.state.message}</Alert>\n                                <form onSubmit={this.onSubmit}>\n                                    <Input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"Email\"\n                                        className='form-control'\n                                        value={this.state.email}\n                                        onChange={this.onChange}\n                                    />\n                                    <br></br>\n                                    <Input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        className='form-control'\n                                        placeholder=\"Password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                        autoComplete=\"new-password\"\n                                    />\n                                    <br></br>\n                                    <input\n                                        className='form-control'\n                                        type=\"password\"\n                                        name=\"RetypedPassword\"\n                                        placeholder=\"Retype Password\"\n                                        autoComplete=\"off\"\n                                        value={this.state.RetypedPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    <br />\n                                    <hr />\n                                    <Button className=\"btn-block\" color=\"success\" type=\"submit\">Sign up</Button>\n                                    <div>\n                                        {this.redirectLogin()}\n                                        <Button className=\"btn-block\" color=\"light\" onClick={this.setRedirect}><b>Login</b></Button>\n                                    </div>\n                                </form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div >\n            </div>\n        );\n    }\n}\nexport default RegisterForm;","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport PanelHeader from '../../components/PanelHeader/PanelHeader';\nimport RegisterForm from \"../../components/Register/RegisterForm\";\n\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            IsLoggedUser: false\n        };\n    }\n    handleConnect = (dataFromChild) => {\n        this.props.IsConnected = dataFromChild;\n    };\n\n    render() {\n        if (localStorage.getItem(\"email\") === null) {\n            return (<div>\n                <PanelHeader size=\"sm\" />\n                <RegisterForm></RegisterForm>\n            </div>)\n        } else {\n            return <Redirect to='/' />\n        }\n    }\n}\n\nexport default Register;\n","import React from 'react';\nimport UserService from '../../services/user-service';\nimport { Alert, Button, Card, CardBody, Container, Input } from 'reactstrap';\n\nclass ProfilInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentPassword: '',\n      NewPassword: '',\n      RetypePassword: '',\n      message: '',\n      display: false,\n      displaySuccess: false\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmitUpdatePassword = (e) => {\n    e.preventDefault();\n\n    const { CurrentPassword, NewPassword, RetypePassword } = this.state;\n\n    if (NewPassword !== RetypePassword) {\n      this.setState({ message: \"New password does not correspond to confirm password data field.\", display: true });\n    }\n    else if (NewPassword === \"\" || RetypePassword === \"\") {\n      this.setState({ message: \"Password data field are empty\", display: true });\n    } else {\n      UserService.resetPassword(CurrentPassword, NewPassword).then((value) => {\n        if (value.status === false) {\n          this.setState({ message: value.message, display: true, displaySuccess: false });\n        }\n        else if (value.status === true) {\n          this.setState({ message: value.message, displaySuccess: true, display: false });\n        }\n      }).catch((err) => {\n        this.setState({ error: err, display: true, displaySuccess: false });\n        console.error(err)\n      })\n    }\n  }\n\n  closeAlert = () => {\n    this.setState({ message: \"\", display: false, displaySuccess: false });\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className=\"col-xs-1 col-1\">\n          <Button className=\"btn btn-circle btn-lg\" color=\"light\" title=\"Back\" style={{ borderRadius: '25px', padding: '11px 12px'}}>\n            <i style={{ transform: 'rotate(180deg)'}} className=\"material-icons\">arrow_right_alt</i>\n          </Button>\n        </div>\n        <div className=\"content\">\n          <div className=\"login-form\">\n            <Card>\n              <CardBody>\n                <h3 className=\"text-center\" style={{ fontWeight: 'bold', color: '#172029' }}>\n                  Reset Password\n              </h3>\n                <Alert color=\"success\" isOpen={this.state.display} toggle={this.closeAlert}>\n                  {this.state.message}\n                </Alert>\n                <Alert color=\"danger\" isOpen={this.state.display} toggle={this.closeAlert}>\n                  {this.state.message}\n                </Alert>\n\n                <form onSubmit={this.onSubmitUpdatePassword}>\n                  <Input\n                    className='form-control'\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Current Password\"\n                    value={this.state.CurrentPassword}\n                    onChange={this.onChange}\n                    autoComplete=\"off\"\n                  />\n                  <br></br>\n                  <Input\n                    className='form-control'\n                    type=\"password\"\n                    name=\"new-password\"\n                    placeholder=\"New Password\"\n                    value={this.state.NewPassword}\n                    onChange={this.onChange}\n                    autoComplete=\"off\"\n                  />\n                  <br></br>\n                  <Input\n                    className='form-control'\n                    type=\"password\"\n                    name=\"confirm-password\"\n                    placeholder=\"Retype New Password\"\n                    value={this.state.RetypePassword}\n                    onChange={this.onChange}\n                    autoComplete=\"off\"\n                  />\n\n                  <div style={{ display: 'flex', justifyContent: 'center' }} sm={12}>\n                    <Button className=\"btn-block\" color=\"success\">Update Password</Button>\n                  </div>\n                </form>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n        </Container>\n    );\n  }\n}\n\nexport default ProfilInfo;\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport PanelHeader from '../../components/PanelHeader/PanelHeader';\nimport ProfilInfo from '../../components/Profil/ProfilInfo';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            IsLoggedUser: false\n        };\n    }\n    handleConnect = (dataFromChild) => {\n        this.props.IsConnected = dataFromChild;\n    };\n\n    render() {\n        if (localStorage.getItem('email') !== null) {\n            return (\n            <div>\n                <PanelHeader size=\"sm\" />\n                <ProfilInfo></ProfilInfo>\n            </div>\n            )\n        }\n        else {\n            return <Redirect to='/' />\n        }\n    }\n}\n\nexport default Profile;","import React, { Component } from \"react\";\nimport { Alert, Button, Card, CardBody, Col, Input, Modal, ModalHeader, ModalBody, ModalFooter, Row, Table } from 'reactstrap';\nimport UserService from '../../services/user-service';\n\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nclass Admin extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      updated: false,\n      message: '',\n      modal: false,\n      modalAddUser: false,\n      modalRights: false,\n      alert: false,\n      color: '',\n      users: []\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.toggleAddUser = this.toggleAddUser.bind(this);\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  toggle = (email, e) => {\n    this.setState({\n      modal: true, email: email\n    });\n    localStorage.setItem('toDelete', email);\n  }\n\n  toggleAddUser = () => {\n    this.setState(prevState => ({ modalAddUser: !prevState.modalAddUser })\n    );\n  }\n\n  toggleRights = (email, e) => {\n    this.setState(prevState => ({ modalRights: !prevState.modalRights }));\n    this.setState({ email: email });\n    localStorage.setItem('toAdmin', email);\n  }\n\n  closeAlert = () => {\n    this.setState({ modalAddUser: false, modal: false, modalRights: false, message: \"\", updated: false });\n  }\n\n  getUser = () => {\n    let usersList = []\n    UserService.getAllUsers().then((response) => {\n      if (!response || response === 'undefined') {\n        history.push('/server');\n        window.location.reload();\n      } else {\n        response.forEach((line) => {\n          if (!line) {\n            history.push('/server');\n          }\n          usersList.push(line)\n        });\n      }\n      this.setState({ users: usersList, modal: false });\n    });\n  }\n\n  addUsers = () => {\n    let email = this.state.email;\n    let password = this.state.password;\n    UserService.createUser(email, password).then((response) => {\n      if (response.status === true) {\n        this.getUser();\n        this.setState({ modalAddUser: false, updated: true, message: response.message, color: 'success' });\n      } else {\n        this.setState({ modalAddUser: false, updated: true, message: response.message, color: 'danger' })\n      }\n    }).catch((err) => {\n      this.setState({ alert: true, message: err, color: 'danger' })\n    });\n  }\n\n  setAdmin = () => {\n    let email = localStorage.getItem(\"toAdmin\");\n    UserService.setAdmin(email).then((response) => {\n      if (response.status === true) {\n        this.getUser();\n        this.setState({ modalRights: false, updated: true, message: response.message, color: 'success' });\n      } else {\n        this.setState({ modalRights: false, updated: true, message: response.message, color: 'danger' });\n      }\n    }).catch((err) => {\n      this.setState({ modalRights: false, updated: true, message: err, color: 'danger' });\n    });\n    localStorage.removeItem('toAdmin');\n  }\n\n  onDelete = () => {\n    let email = localStorage.getItem('toDelete');\n    UserService.deleteUser(email).then((response) => {\n      if (response.data.status === true) {\n        this.getUser();\n        this.setState({ modal: false, updated: true, message: response.data.message, color: 'success' });\n      } else {\n        this.setState({ modal: false, updated: true, message: response.data.message, color: 'danger' });\n      }\n    }).catch((error) => {\n      return (error);\n    });\n    localStorage.removeItem('toDelete');\n  }\n\n  render() {\n    if (window.localStorage.getItem(\"role\") !== \"admin\") {\n      window.location.replace('/');\n      window.reload(true);\n    }\n    let listUsers = this.state.users;\n    const listUser = listUsers.map((list) =>\n      <tr key={list.ID}>\n        <td>{list.email}</td>\n        <td align=\"right\">{list.Role}</td>\n        <td align=\"center\" style={{ width: '160px' }}>\n          <Button className=\"btn btn-info btn-outline btn-sm\" size=\"sm\">\n            <i className=\"material-icons\" style={{ fontSize: '17px' }} value={list.email} onClick={this.toggleRights.bind(this, list.email)}>settings</i>\n          </Button>\n          <Button className=\"btn btn-danger btn-outline btn-sm\" size=\"sm\" value={list.email} onClick={this.toggle.bind(this, list.email)}>\n            <i className=\"material-icons\" style={{ fontSize: '17px' }}>delete</i>\n          </Button>\n        </td>\n      </tr>\n    );\n    return (\n      <div className=\"container\" style={{ height: '90vh', marginTop: '30px' }}>\n        <Row>\n          <Col sm={12} md={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col xs={8}>\n                    <h5 style={{ marginTop: '12px', marginBottom: '' }}> List users</h5>\n                  </Col>\n                  <Col xs={2}>\n                    <Button className=\"btn btn-sm btn-block btn-success\" onClick={this.toggleAddUser}>\n                      <i className=\"material-icons\" style={{ fontSize: '17px' }}>person_add</i>\n                    </Button>\n                  </Col>\n                  <Col xs={2}>\n                    <Button className=\"btn btn-sm btn-block btn-light\" onClick={this.getUser}>\n                      <i className=\"material-icons\" style={{ fontSize: '17px' }}>update</i>\n                    </Button>\n                  </Col>\n                </Row>\n                <Alert color={this.state.color} isOpen={this.state.updated} toggle={this.closeAlert}>\n                  {this.state.message}\n                </Alert>\n                <hr />\n                <div className=\"table-container\">\n                  <Table responsive striped bordered hover size=\"md\">\n                    <tbody>\n                      {listUser}\n                    </tbody>\n                  </Table>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal isOpen={this.state.modal} size=\"md\">\n          <ModalHeader toggle={this.closeAlert}><strong className=\"text-center\">Are you sure ? </strong></ModalHeader>\n          <ModalBody>\n            <br />\n            {this.state.email} will be definitely deleted.\n            <br />\n            <br />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.closeAlert}>Cancel</Button>\n            <Button color=\"success\" onClick={this.onDelete}>Delete</Button>\n          </ModalFooter>\n        </Modal>\n        <Modal isOpen={this.state.modalAddUser} size=\"md\">\n          <ModalHeader toggle={this.closeAlert}><strong className=\"text-center\">Create a new user </strong></ModalHeader>\n          <ModalBody>\n            <Input className='form-control'\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.onChange}\n            />\n            <br></br>\n            <Input\n              className='form-control'\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.onChange}\n              />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.closeAlert}>Cancel</Button>\n            <Button color=\"success\" onClick={this.addUsers}>Create</Button>\n          </ModalFooter>\n        </Modal>\n        <Modal isOpen={this.state.modalRights} size=\"md\">\n          <ModalHeader toggle={this.closeAlert}><strong className=\"text-center\">Update Rights</strong></ModalHeader>\n          <ModalBody>\n            <br />\n            <p><strong style={{ color: '#2ba5ac' }}>{this.state.email}</strong> will become an Admin. Are you sure? </p>\n            <br />\n            <br />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.closeAlert}>Cancel</Button>\n            <Button color=\"success\" onClick={this.setAdmin}>I'm sure!</Button>\n          </ModalFooter>\n        </Modal>\n\n      </div>\n    )\n  }\n}\n\nexport default Admin;","import React, { Component } from \"react\";\nimport Admin from '../../components/Admin/Admin';\nimport PanelHeader from '../../components/PanelHeader/PanelHeader';\nimport { Redirect } from 'react-router-dom';\n\nclass AdminS extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      IsLoggedUser: false\n    };\n  }\n  handleConnect = (dataFromChild) => {\n    this.props.IsConnected = dataFromChild;\n  };\n\n  render() {\n    if (localStorage.getItem(\"email\") === '' || localStorage.getItem(\"role\") !== 'admin') {\n      return <Redirect to='/' />\n    } else {\n      return (\n        <div>\n          <PanelHeader size=\"sm\" />\n          <Admin></Admin>\n        </div>)\n    }\n  }\n}\n\nexport default AdminS;\n","import React from 'react';\nimport UserService from '../../services/user-service';\nimport { Alert, Button, Card, CardBody } from 'reactstrap';\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\n\nclass ValidateForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            color: '',\n            display: false,\n            message: '',\n            redirect: false\n        }\n    }\n\n    getEmail = (url) => {\n        let queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n        if (queryString) {\n            let arr = queryString.split('&');\n            for (let i = 0; i < arr.length; i++) {\n                let a = arr[i].split('=');\n                let paramName = a[0];\n                if (paramName === 'token') {\n                    localStorage.setItem('token', a[1]);\n                }\n                if (paramName === 'email') {\n                    let paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n                    paramName = paramName.toLowerCase();\n                    return paramValue\n                }\n            }\n        }\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        let email = this.getEmail();\n        UserService.validAccount(email).then((res) => {\n            if (!res.status) {\n                this.setState({ color: 'danger', display: true, message: res.message })\n            } else {\n                if (res.message === 'Account already verified') {\n                    this.setState({ color: 'warning', display: true, message: res.message });    \n                    setInterval(() => {\n                        history.push('/');\n                        window.location.reload();\n                    }, 2000);    \n                } else {\n                    this.setState({ color: 'success', display: true, message: res.message });\n                    setInterval(() => {\n                        history.push('/');\n                        window.location.reload();\n                    }, 2000);\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"bg-login\">\n                <div className=\"content\">\n                    <div className=\"login-form\">\n                        <Card>\n                            <CardBody>\n                                <h1 className=\"text-center\" style={{ fontWeight: 'bold', color: '#1720298a' }}>\n                                    Valide your account\n                                </h1>\n                                <hr />\n                                <Alert color={this.state.color} isOpen={this.state.display}>{this.state.message}</Alert>\n                                <Button className=\"btn-block\" color=\"success\" onClick={this.onSubmit}>Finish !</Button>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default ValidateForm;\n","import Login from '../views/Login/Login';\nimport Servers from '../views/Servers/Servers';\nimport Register from '../views/Register/Register';\nimport Profil from '../views/Profile/Profile';\nimport Admin from '../views/Admin/Admin';\nimport Validation from '../views/Validation/Validation';\n\nvar dashRoutes = [\n    { path: \"/register\", name: \"Register\", icon:\"users_single-02\", component: Register},\n    { path: \"/profil\", name: \"Profil\", icon:\"users_single-02\", component: Profil},\n    { path: \"/admin\", name: \"Admin\", icon:\"users_single-02\", component: Admin},\n    { path: \"/login\", name: \"Login\", icon:\"users_single-02\", component: Login},\n    { path: \"/validate\", name: \"Validation\", icon:\"users_single-02\", component: Validation},\n    { path: \"/\", name: \"Home\", icon: \"design_image\", component: Servers},\n    { redirect: true, path: \"/\", pathTo: \"/login\", name: \"Login\", component: Login}\n];\n\nexport default dashRoutes;\n","import React, { Component } from \"react\";\nimport PanelHeader from '../../components/PanelHeader/PanelHeader';\nimport ValidateForm from '../../components/Validation/Validation';\n// import { Redirect } from 'react-router-dom';\n\nclass Validation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            IsLoggedUser: false\n        };\n    }\n\n    handleConnect = (dataFromChild) => {\n        this.props.IsConnected = dataFromChild;\n    };\n    \n    render() {\n            return (\n                <div>\n                    <PanelHeader size=\"sm\" />\n                    <ValidateForm></ValidateForm>\n                </div>\n            )\n    }\n}\n\n\nexport default Validation;\n","import React from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, Dropdown, DropdownItem, DropdownToggle,DropdownMenu, Container } from 'reactstrap';\nimport dashboardRoutes from '../../routes/dashboard';\n\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logged: false,\n            isOpen: false,\n            dropdownOpen: false,\n            color: \"transparent\"\n        };\n        this.toggle = this.toggle.bind(this);\n        this.dropdownToggle = this.dropdownToggle.bind(this);\n    }\n\n    toggle() {\n        if (this.state.isOpen) {\n            this.setState({\n                color: \"transparent\"\n            });\n        } else {\n            this.setState({\n                color: \"black\"\n            });\n        }\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    dropdownToggle(e) {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    getBrand() {\n        var name;\n        dashboardRoutes.map((prop, key) => {\n            if (prop.collapse) {\n                prop.views.map((prop, key) => {\n                    if (prop.path === this.props.location.pathname) {\n                        name = prop.name;\n                    }\n                    return null;\n                })\n            } else {\n                if (prop.redirect) {\n                    if (prop.path === this.props.location.pathname) {\n                        name = prop.name;\n                    }\n                } else {\n                    if (prop.path === this.props.location.pathname) {\n                        name = prop.name;\n                    }\n                }\n            }\n            return null;\n        })\n        return name;\n    }\n\n    openSidebar() {\n        document.documentElement.classList.toggle('nav-open');\n        this.refs.sidebarToggle.classList.toggle('toggled');\n    }\n\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n    updateColor() {\n        if (window.innerWidth < 2100 && this.state.isOpen) {\n            this.setState({\n                color: \"white\"\n            });\n        } else {\n            this.setState({\n                color: \"black\"\n            });\n        }\n    }\n\n    onClickAccount() {\n        history.push('/profil');\n        window.location.reload();\n    }\n\n    onClickLogout() {\n       localStorage.clear();\n       window.location.reload();\n    }\n\n\n    componentDidMount() {\n        let isLogged = localStorage.getItem('token');\n        if (isLogged) {\n            this.setState({ logged: true });\n        }\n        window.addEventListener(\"resize\", this.updateColor.bind(this));\n    }\n\n    componentDidUpdate(e) {\n        if (window.innerWidth < 2100 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-open') !== -1) {\n            document.documentElement.classList.toggle('nav-open');\n            this.refs.sidebarToggle.classList.toggle('toggled');\n        }\n    }\n\n    render() {\n        \n        return (\n            <Navbar\n                color={this.props.location.pathname.indexOf('full-screen-maps') !== -1 ? \"white\" : this.state.color} expand=\"lg\"\n                className={\n                    this.props.location.pathname.indexOf('full-screen-maps') !== -1 ?\n                        \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + this.state.color}>\n                <Container fluid>\n                    <div className=\"navbar-wrapper\">\n                        <div className=\"navbar-toggle\">\n                            <button type=\"button\" ref=\"sidebarToggle\" className=\"navbar-toggler\" onClick={() => this.openSidebar()}>\n                                <span className=\"navbar-toggler-bar bar1\"></span>\n                                <span className=\"navbar-toggler-bar bar2\"></span>\n                                <span className=\"navbar-toggler-bar bar3\"></span>\n                            </button>\n                        </div>\n                        <NavbarBrand href=\"/\"></NavbarBrand>\n                    </div>\n                    <NavbarToggler onClick={this.toggle}>\n                        <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                        <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                        <span className=\"navbar-toggler-bar navbar-kebab\"></span>\n                    </NavbarToggler>\n                    <Collapse isOpen={this.state.isOpen} navbar className=\"justify-content-end\">\n                        <Nav navbar>\n                            <Dropdown nav isOpen={this.state.dropdownOpen} toggle={(e) => this.dropdownToggle(e)}>\n                                <DropdownToggle caret nav>\n                                    <i className=\"now-ui-icons users_single-02\"></i>\n                                    <p>\n                                        <span className=\"d-lg-none d-md-block\"></span>\n                                    </p>\n                                </DropdownToggle>\n                                { !this.state.isLogged ? <DropdownMenu right>\n                                    <DropdownItem tag=\"a\" style={{ cursor: 'pointer' }} onClick={() => this.onClickAccount()}>Account</DropdownItem>\n                                    <DropdownItem tag=\"a\" style={{ color: 'red', cursor: 'pointer' }} onClick={() => this.onClickLogout()}>Log out</DropdownItem>\n                                </DropdownMenu> : null }\n                                { this.state.isLogged ? <DropdownMenu right>\n                                    <DropdownItem tag=\"a\" style={{ cursor: 'pointer',color: '#2ba5ac' }} href=\"/login\">Log In</DropdownItem>\n                                    <DropdownItem tag=\"a\" style={{ cursor: 'pointer',color: '#ffb136' }} href=\"/register\">Sign Up</DropdownItem>\n                                </DropdownMenu> : null }\n\n                            </Dropdown>\n                        </Nav>\n                    </Collapse>\n                </Container>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;\n","import Dashboard from '../layouts/Dashboard/Dashboard.jsx';\n\nvar indexRoutes = [\n    { path: \"/\", name: \"Home\", component: Dashboard }\n];\n\nexport default indexRoutes;\n","import React, { Component } from 'react';\nimport { createBrowserHistory } from 'history';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport indexRoutes from './routes/index';\n\nconst hist = createBrowserHistory();\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Router history={hist}>\n                    <Switch>\n                    {\n                        indexRoutes.map((prop,key) => {\n                            return (\n                                <Route path={prop.path} key={key} component={prop.component} />\n                            );\n                        })\n                    }\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './assets/scss/now-ui-dashboard.css';\nimport './assets/css/demo.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}